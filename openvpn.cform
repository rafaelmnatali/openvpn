{
	"AWSTemplateFormatVersion" : "2010-09-09",

	  "Description": "This template creates an EC2 instance and configure OpenVPN", 
  	  
  	  "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                    	"VPC",
                        "Public Network ACL",
                        "Public Subnet"                   
                    ]
                }
            ],
            "ParameterLabels": {
            	"VpcId": {
            		"default" : "VPC id"
            	},

                "PublicNACLid": {
                    "default": "Public NACL id"
                },

                "Pulic Subnet": {
                	"default": "Public Subnet id"
                }               
            }
        }
    },
    "Parameters": {
    	"VpcId": {
    		"Description": "Enter the VPC where to configure OpenVPN",
    		"Type": "List<AWS::EC2::VPC::Id>"
    	},

        "PublicNACLid": {
            "Description": "Enter the NACL Id for Public Subnet",
            "Type": "String"
        },

        "PublicSubnet": {
        	"Description": "Select the Public Subnet to deploy the OpenVPN Server",
        	"Type": "List<AWS::EC2::Subnet::Id>"
        }

    },


	"Resources": {

		"ElasticIPaddress" : {
			"Type" : "AWS::EC2::EIP",
			"Properties" : {
				"Domain" : "vpc"
			   }
		},

		"EC2Instance" : {
			"Type" : "AWS::EC2::Instance",
			"Properties" : {
				"ImageId" : "ami-0f9cf087c1f27d9b1",
		            "KeyName" : "openvpn-virginia",
		            "SecurityGroupIds" : [ { "Ref" : "OpenVPNSecurityGroup"}],
		            "SubnetId" : { "Fn::Select" : [ "0", { "Ref" : "PublicSubnet"}]},
		            "InstanceType" : "t2.micro",
		            "IamInstanceProfile" : "natali_ec2_fullaccess",
		            "SourceDestCheck" : "False",            
		            "UserData": {
		                 "Fn::Base64": { "Fn::Join":["", [
		                   "#!/bin/bash -ex\n",
		                   "cd /home/ubuntu/\n",
		                   "git clone https://github.com/redgeoff/openvpn-server-vagrant\n",
		                   "cd /home/ubuntu/openvpn-server-vagrant\n",
		                   "cp config-default.sh config.sh\n",
		                   "sed 's/192.168.50.11/", {"Ref" : "ElasticIPaddress"}, "/g' config.sh -i\n",
		                   "apt-get update && apt-get install -y openvpn\n",
		                   "/home/ubuntu/openvpn-server-vagrant/openvpn.sh\n",
		                   "sed '143 a push \"route 10.0.0.0 255.255.0.0\"' /etc/openvpn/server.conf -i\n",
		                   "sed '203 a push \"dhcp-option DNS 10.0.0.2\"' /etc/openvpn/server.conf -i\n",
		                   "sed '204 a push \"dhcp-option DOMAIN rmnatali.net\"' /etc/openvpn/server.conf -i\n",
		                   "systemctl restart openvpn@server\n",
		                   "apt install -y awscli\n",
		                   "aws s3 cp s3://natalilogs/users.txt /home/ubuntu/openvpn-server-vagrant/\n",
		                   "aws s3 cp s3://natalilogs/centauro_users.sh /home/ubuntu/openvpn-server-vagrant/\n",
		                   "chmod +x /home/ubuntu/openvpn-server-vagrant/centauro_users.sh\n",
		                   "cd /home/ubuntu/openvpn-server-vagrant\n",
		                   "./centauro_users.sh\n"
		                 ]]}
		               },

		            "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"}}, { "Key" : "Name", "Value" : "OpenVPN-Server"}]
		    },

		    "DependsOn" : "ElasticIPaddress"
		},

		"ElasticIPAssociation" : {
			"Type" : "AWS::EC2::EIPAssociation",
			"Properties" : {
				"InstanceId" : {"Ref" : "EC2Instance"},
				"EIP" : {"Ref" : "ElasticIPaddress"}
			},

			"DependsOn" : "EC2Instance"
		},
	
	    "PublicSubnetNACLPublicAccess1194" : {
	    	"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId" : { "Ref" : "PublicNACLid"},
				"RuleNumber" : "400",
				"Protocol" : "17",
				"PortRange" : { "From" : "1194", "To" : "1194" },
				"Egress" : "false",
				"RuleAction" : "allow",
				"CidrBlock" : "0.0.0.0/0"
				}
			},

		"PublicSubnetNACLPublicAccessUDPephemeralegress" : { 
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId" : { "Ref" : "PublicNACLid"},
				"RuleNumber" : "400",
				"Protocol" : "17",
				"PortRange" : { "From" : "1024", "To" : "65535" },
				"Egress" : "true",
				"RuleAction" : "allow",
				"CidrBlock" : "0.0.0.0/0"
				}
		},

	    "PublicSubnetNACLPublicAccess22egressPrivateSubnet1" : {
	    	"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId" : { "Ref" : "PublicNACLid"},
				"RuleNumber" : "500",
				"Protocol" : "6",
				"PortRange" : { "From" : "22", "To" : "22" },
				"Egress" : "true",
				"RuleAction" : "allow",
				"CidrBlock" : "10.0.0.0/19"
				}
		},

		"PublicSubnetNACLPublicAccess22egressPrivateSubnet2" : { 
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId" : { "Ref" : "PublicNACLid"},
				"RuleNumber" : "600",
				"Protocol" : "6",
				"PortRange" : { "From" : "22", "To" : "22" },
				"Egress" : "true",
				"RuleAction" : "allow",
				"CidrBlock" : "10.0.32.0/19"
				}
		},

		"OpenVPNSecurityGroup" : {
		  "Type" : "AWS::EC2::SecurityGroup",
		  "Properties" : {
		    "GroupDescription" : "Allow access to private resources using OpenVPN",
		    "SecurityGroupIngress" : [ 
		    		{ 
		    			"IpProtocol": "6",
		    			"FromPort": "443",
		    			"ToPort": "443",
		    			"CidrIp": "0.0.0.0/0",
		    			"Description": "Public access to port 443"
		    		},
		    		{ 
		    			"IpProtocol": "17",
		    			"FromPort": "1194",
		    			"ToPort": "1194",
		    			"CidrIp": "0.0.0.0/0",
		    			"Description": "Public access to port 1194"
		    		}
		    ],
		    "SecurityGroupEgress" : [
		    		{ 
		    			"IpProtocol": "17",
		    			"FromPort": "1024",
		    			"ToPort": "65535",
		    			"CidrIp": "0.0.0.0/0",
		    			"Description": "Allow access to UDP ephemeral ports"
		    		},
		    		{ 
		    			"IpProtocol": "6",
		    			"FromPort": "1024",
		    			"ToPort": "65535",
		    			"CidrIp": "0.0.0.0/0",
		    			"Description": "Allow access to TCP ephemeral ports"
		    		},
		    		{ 
		    			"IpProtocol": "6",
		    			"FromPort": "22",
		    			"ToPort": "22",
		    			"CidrIp": "10.0.0.0/19",
		    			"Description": "Allow access to SSH from Private Subnet 1"
		    		},
		    		{ 
		    			"IpProtocol": "6",
		    			"FromPort": "22",
		    			"ToPort": "22",
		    			"CidrIp": "10.0.32.0/19",
		    			"Description": "Allow access to SSH from Private Subnet 2"
		    		},
		    		{
		    			"IpProtocol": "6",
		    			"FromPort": "443",
		    			"ToPort": "443",
		    			"CidrIp": "0.0.0.0/0",
		    			"Description": "Allow instance to connect to Internet to perform packages installation/update"
		    		},
		    		{
		    			"IpProtocol": "6",
		    			"FromPort": "80",
		    			"ToPort": "80",
		    			"CidrIp": "0.0.0.0/0",
		    			"Description": "Allow instance to connect to Internet to perform packages installation/update"
		    		}
		    ],
		    "VpcId" : { "Fn::Select" : [ "0", { "Ref" : "VpcId"}]},
		    "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"}}, { "Key" : "Name", "Value" : "sg_openvpn"}]
		  }
		}
	}
}	